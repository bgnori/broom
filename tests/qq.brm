(define x 1)
(define y 4)
(pair? 1)

'(0 x 2 3 y 5)
`(0 x 2 3 y 5)

`(0 ,x 2 3 ,y 5)

;`(0 ,,x `2 `(,y) 5)

(defmacro foo [p q]
    `(list 0 ,p 2 3 ,q 5))
;    `(0 ,p 2 3 ,q 5))

(foo 1 4) ; => (0 1 2 3 4 5)

(defmacro bar [p & q]
    `(list ,p ,@q))

(bar 1 2 3) ; (1 2 3)

(defmacro qqcond [test action & rest]
    (if (null? rest)
        `(if ,test ,action '())
        `(if ,test ,action (qqcond ,@rest))))

(qqcond
    false (println 1)
    false (println 2)
    (= 1 2) (println 3)
    else (println "else"))

