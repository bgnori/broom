(defn make-slice-type [item-type]
    (. reflect SliceOf item-type))

(defn make-slice-of [item-type len cap]
    (. reflect MakeSlice (make-slice-type item-type) len cap))

(defn nth [xs i]
    (. (. xs Index i) Interface))

(defn slice-append [xs item]
    (. reflect Append xs (. reflect ValueOf item)))

(defn slice-length [xs]
    (. reflect xs Len))

(defn slice-empty? [xs]
    (= (slice-length xs) 0))

(defn slice-last [xs]
    (nth xs (- (slice-length xs) 1)))

;(defn slice-zip1 [xs]) ;[1 2 3]) ; ((1) (2) (3)) ???
;slice-reverse : no need for it?
